name: Build and Release Android App

env:
  main_project_module: app
  app_name: Champ Kernel Manager

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set environment variables
        run: |
          echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
          echo "build_number=$(date +'%Y%m%d%H%M')" >> $GITHUB_ENV
          echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV
          echo "commit_hash=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      # Cache configuration
      - name: Cache Gradle Wrapper
        uses: actions/cache@v3
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-wrapper-

      - name: Cache Gradle Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-

      - name: Cache Android Build
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.main_project_module }}/build
            ~/.android/build-cache
          key: ${{ runner.os }}-build-${{ env.main_project_module }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/*.kt', '**/*.java', '**/*.xml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.main_project_module }}-

      - name: Set Up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Run tests
        run: ./gradlew test --build-cache --parallel --no-daemon

      - name: Build project
        run: ./gradlew build --build-cache --parallel --no-daemon

      - name: Build debug APK
        run: ./gradlew assembleDebug --build-cache --parallel --no-daemon

      - name: Decode keystore
        run: |
          mkdir -p $HOME/keystore/
          echo "${{ secrets.SIGNING_KEYSTORE_B64 }}" | base64 --decode > $HOME/keystore/release-key.jks

      - name: Build signed APK Release
        run: |
          ./gradlew ${{ env.main_project_module }}:assembleRelease \
            --build-cache --parallel --no-daemon \
            -Pandroid.injected.signing.store.file=$HOME/keystore/release-key.jks \
            -Pandroid.injected.signing.store.password=${{ secrets.STORE_PASSWORD }} \
            -Pandroid.injected.signing.key.alias=${{ secrets.KEY_ALIAS }} \
            -Pandroid.injected.signing.key.password=${{ secrets.KEY_PASSWORD }}

      - name: Build signed AAB
        run: |
          ./gradlew ${{ env.main_project_module }}:bundleRelease \
            --build-cache --parallel --no-daemon \
            -Pandroid.injected.signing.store.file=$HOME/keystore/release-key.jks \
            -Pandroid.injected.signing.store.password=${{ secrets.STORE_PASSWORD }} \
            -Pandroid.injected.signing.key.alias=${{ secrets.KEY_ALIAS }} \
            -Pandroid.injected.signing.key.password=${{ secrets.KEY_PASSWORD }}

      - name: Upload to VirusTotal
        id: virustotal
        run: |
          APK_PATH=$(find app/build/outputs/apk/release -name "*.apk" | head -n 1)
          echo "APK_FILENAME=$(basename $APK_PATH)" >> $GITHUB_ENV
          
          RESPONSE=$(curl -s \
            --url https://www.virustotal.com/api/v3/files \
            --header "x-apikey: ${{ secrets.VIRUSTOTAL_API_KEY }}" \
            --form file=@$APK_PATH)
          
          ANALYSIS_ID=$(echo $RESPONSE | jq -r '.data.id')
          ANALYSIS_URL="https://www.virustotal.com/gui/file-analysis/$ANALYSIS_ID"
          
          echo "vt_analysis_url=$ANALYSIS_URL" >> $GITHUB_ENV
          echo "VirusTotal scan submitted. Analysis URL: $ANALYSIS_URL"

      - name: Generate changelog
        id: changelog
        run: |
          CHANGELOG=$(git log -10 --pretty=format:"- %s (%h)" --abbrev-commit)
          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          echo "$CHANGELOG" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create Release Notes
        run: |
          cat > release_notes.md << EOL
          # ${{ env.app_name }} - Build ${{ env.build_number }}
          
          ![Build Status](https://github.com/${{ github.repository }}/actions/workflows/build.yml/badge.svg)
          
          ## Release Information
          - **Version**: ${{ env.date_today }}-${{ env.commit_hash }}
          - **Build Date**: $(date +'%B %d, %Y')
          
          ## Security
          - [VirusTotal Scan Results](${{ env.vt_analysis_url }})
          
          ## Recent Changes
          ${{ env.CHANGELOG }}
          
          ## Installation
          1. Download the APK file
          2. Enable "Install from Unknown Sources" in your device settings
          3. Install the application
          
          ## Support
          If you encounter any issues, please [open an issue](https://github.com/${{ github.repository }}/issues/new) on GitHub.
          EOL

      - name: Create Pre-release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.app_name }} - ${{ env.date_today }}
          tag_name: v${{ env.date_today }}-${{ env.commit_hash }}
          prerelease: true
          body_path: release_notes.md
          files: |
            app/build/outputs/apk/debug/*.apk
            app/build/outputs/apk/release/*.apk
            app/build/outputs/bundle/release/*.aab
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload APK Debug - Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.app_name }}-${{ env.date_today }}-debug
          path: app/build/outputs/apk/debug/

      - name: Upload APK Release - Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.app_name }}-${{ env.date_today }}-release
          path: app/build/outputs/apk/release/

      - name: Upload AAB Release - Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.app_name }}-${{ env.date_today }}-bundle
          path: app/build/outputs/bundle/release/